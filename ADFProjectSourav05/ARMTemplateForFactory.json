{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFProjectSourav05"
		},
		"file_to_src_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'file_to_src'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://KVProjectSourav.vault.azure.net/"
		},
		"file_to_src_db_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "adfdemolearn.database.windows.net"
		},
		"file_to_src_db_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adfdemolearn"
		},
		"file_to_src_db_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sosingh"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/file_to_src')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "file_to_src",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"sink1": {},
									"sink2": {},
									"sink3": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/file_to_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_to_stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pre_batch_control",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "pre_batch_control",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "f77495f0-7809-4c4b-9ff1-57980fbbd336"
							}
						}
					},
					{
						"name": "Delta_Date_curr",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Pre_batch_control",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Delta_Date_Curr",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					},
					{
						"name": "Delta_Date_prev",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Pre_batch_control",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Delta_Date_Prev",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					},
					{
						"name": "Delta_Date_Set_Curr",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Delta_Date_curr",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CurrBatchStartDate",
							"value": {
								"value": "@activity('Delta_Date_curr').output.runStatus.output.sink1.value[0].CurrBatchStartDate",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Delta_Date_Set_Prev",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Delta_Date_prev",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PrevBatchStartDate",
							"value": {
								"value": "@activity('Delta_Date_prev').output.runStatus.output.sink2.value[0].PrevBatchStartDate",
								"type": "Expression"
							}
						}
					},
					{
						"name": "src_to_Stg_insured",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delta_Date_Set_Curr",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Delta_Date_Set_Prev",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetDataForDateRange1]",
								"storedProcedureParameters": {
									"EndDate": {
										"type": "String",
										"value": {
											"value": "@variables('CurrBatchStartDate')",
											"type": "Expression"
										}
									},
									"StartDate": {
										"type": "String",
										"value": {
											"value": "@variables('PrevBatchStartDate')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"InsuredId"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_insured",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stg_insured",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "src_to_stg_agent",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delta_Date_Set_Curr",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Delta_Date_Set_Prev",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetDataForDateRangeagent]",
								"storedProcedureParameters": {
									"End": {
										"type": "String",
										"value": {
											"value": "@variables('CurrBatchStartDate')",
											"type": "Expression"
										}
									},
									"Start": {
										"type": "String",
										"value": {
											"value": "@variables('PrevBatchStartDate')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AgentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_agent",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stg_agent",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "src_wrk_policy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delta_Date_Set_Curr",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Delta_Date_Set_Prev",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetDataForDateRangePolcy]",
								"storedProcedureParameters": {
									"EndPolicy": {
										"type": "String",
										"value": {
											"value": "@variables('CurrBatchStartDate')",
											"type": "Expression"
										}
									},
									"StartPolicy": {
										"type": "String",
										"value": {
											"value": "@variables('PrevBatchStartDate')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_policy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wrk_policy",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CurrBatchStartDate": {
						"type": "String"
					},
					"PrevBatchStartDate": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/pre_batch_control')]",
				"[concat(variables('factoryId'), '/dataflows/Delta_Date_Curr')]",
				"[concat(variables('factoryId'), '/dataflows/Delta_Date_Prev')]",
				"[concat(variables('factoryId'), '/datasets/src_insured')]",
				"[concat(variables('factoryId'), '/datasets/stg_insured')]",
				"[concat(variables('factoryId'), '/datasets/src_agent')]",
				"[concat(variables('factoryId'), '/datasets/stg_agent')]",
				"[concat(variables('factoryId'), '/datasets/src_policy')]",
				"[concat(variables('factoryId'), '/datasets/wrk_policy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Policy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Policy.csv",
						"folderPath": "Input",
						"container": "sourcefile"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PolicyNum",
						"type": "String"
					},
					{
						"name": "PremAmt",
						"type": "String"
					},
					{
						"name": "Commission",
						"type": "String"
					},
					{
						"name": "InsuredId",
						"type": "String"
					},
					{
						"name": "AgentId",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/agent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Agent.csv",
						"folderPath": "Input",
						"container": "sourcefile"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AgentName",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "AgentID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/batch')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BatchID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "batch"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/insured')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Insured.csv",
						"folderPath": "Input",
						"container": "sourcefile"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "InsuredId",
						"type": "String"
					},
					{
						"name": "InsuredName",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_agent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AgentName",
						"type": "varchar"
					},
					{
						"name": "AgentCity",
						"type": "varchar"
					},
					{
						"name": "AgentID",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "src_agent"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_insured')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "InsuredId",
						"type": "varchar"
					},
					{
						"name": "InsuredName",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "src_insured"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_policy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Policynum",
						"type": "varchar"
					},
					{
						"name": "PremAmt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Commission",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsuredID",
						"type": "varchar"
					},
					{
						"name": "AgentID",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "src_policy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stg_agent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AgentName",
						"type": "varchar"
					},
					{
						"name": "AgentCity",
						"type": "varchar"
					},
					{
						"name": "AgentID",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_agent"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stg_insured')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "InsuredId",
						"type": "varchar"
					},
					{
						"name": "InsuredName",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_insured"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stg_policy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PolicyTransID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Policynum",
						"type": "varchar"
					},
					{
						"name": "PremAmt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Commission",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsuredID",
						"type": "varchar"
					},
					{
						"name": "AgentID",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_policy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_to_src')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('file_to_src_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_to_src_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('file_to_src_db_properties_typeProperties_server')]",
					"database": "[parameters('file_to_src_db_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('file_to_src_db_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "DbPassWord"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delta_Date_Curr')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "batch",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CurrBatchStartDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select StartTime as CurrBatchStartDate from [dbo].[batch] where BatchID=((select max(BatchID) from [dbo].[batch]))',",
						"     format: 'query') ~> source1",
						"source1 sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: true,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delta_Date_Prev')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "batch",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"name": "sink2"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          PrevBatchStartDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select StartTime as PrevBatchStartDate from [dbo].[batch] where BatchID=((select max(BatchID) from [dbo].[batch])-1)\\n',",
						"     format: 'query') ~> source1",
						"source1 sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: true,",
						"     saveOrder: 1) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_to_src')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Policy",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "insured",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "agent",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "src_policy",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "src_insured",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "src_agent",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "derivedColumn3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PolicyNum as string,",
						"          PremAmt as integer,",
						"          Commission as integer,",
						"          InsuredId as string,",
						"          AgentId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          InsuredId as string,",
						"          InsuredName as string,",
						"          City as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source(output(",
						"          AgentName as string,",
						"          City as string,",
						"          AgentID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source3",
						"source1 derive(Created = currentTimestamp()) ~> derivedColumn1",
						"source2 derive(Created = currentTimestamp()) ~> derivedColumn2",
						"source3 derive(Created = currentTimestamp()) ~> derivedColumn3",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Policynum as string,",
						"          PremAmt as integer,",
						"          Commission as integer,",
						"          InsuredID as string,",
						"          AgentID as string,",
						"          Created as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Policynum = PolicyNum,",
						"          PremAmt,",
						"          Commission,",
						"          InsuredID = InsuredId,",
						"          AgentID = AgentId,",
						"          Created",
						"     )) ~> sink1",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          InsuredId as string,",
						"          InsuredName as string,",
						"          City as string,",
						"          Created as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          InsuredId,",
						"          InsuredName,",
						"          City,",
						"          Created",
						"     )) ~> sink2",
						"derivedColumn3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          AgentName as string,",
						"          AgentCity as string,",
						"          AgentID as string,",
						"          Created as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          AgentName,",
						"          AgentCity = City,",
						"          AgentID,",
						"          Created",
						"     )) ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Policy')]",
				"[concat(variables('factoryId'), '/datasets/insured')]",
				"[concat(variables('factoryId'), '/datasets/agent')]",
				"[concat(variables('factoryId'), '/datasets/src_policy')]",
				"[concat(variables('factoryId'), '/datasets/src_insured')]",
				"[concat(variables('factoryId'), '/datasets/src_agent')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pre_batch_control')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "batch",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "batch",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "batch",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          MaxBatchID as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select max(BatchId) as MaxBatchID from [dbo].[batch]',",
						"     format: 'query') ~> source1",
						"source(output(",
						"          BatchID as integer,",
						"          StartTime as string,",
						"          EndTime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     waterMarkColumn: 'BatchID',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source2",
						"source2 keyGenerate(output(BatchIDNew as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(BatchID = toInteger(BatchIDNew + sink1#outputs()[1].MaxBatchID),",
						"          StartTime = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 filter(BatchID==sink1#outputs()[1].MaxBatchID + 1) ~> filter1",
						"source1 sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sink1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          BatchID as integer,",
						"          StartTime as timestamp,",
						"          EndTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          BatchID,",
						"          StartTime",
						"     )) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wrk_policy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "file_to_src_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Policynum",
						"type": "varchar"
					},
					{
						"name": "PremAmt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Commission",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsuredID",
						"type": "varchar"
					},
					{
						"name": "AgentID",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "wrk_policy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/file_to_src_db')]"
			]
		}
	]
}